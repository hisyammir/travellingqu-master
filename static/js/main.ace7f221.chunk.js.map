{"version":3,"sources":["history.js","polyfill.js","App.js","serviceWorker.js","reducers/index.js","reducers/pengelolaReducer.js","reducers/userPenggunaReducer.js","index.js"],"names":["history__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","createBrowserHistory","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","prototype","Event","DefaultLayout","React","lazy","Promise","all","e","then","bind","Login","Register","Page404","Page500","App","react_default","a","createElement","react_router","history","Suspense","fallback","className","class","exact","path","name","render","props","Component","Boolean","location","hostname","match","combineReducers","pengelola","state","arguments","length","action","type","Object","objectSpread","_","mapKeys","payload","defineProperty","id","omit","form","formReducer","userpengguna","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ace7f221.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\n\r\nexport default createBrowserHistory();","/*\n* required polyfills\n*/\nimport \"core-js\";\nimport 'core-js/features/set/map';\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol'\n// import 'core-js/es6/object'\n// import 'core-js/es6/function'\n// import 'core-js/es6/parse-int'\n// import 'core-js/es6/parse-float'\n// import 'core-js/es6/number'\n// import 'core-js/es6/math'\n// import 'core-js/es6/string'\n// import 'core-js/es6/date'\n// import 'core-js/es6/array'\n// import 'core-js/es6/regexp'\n// import 'core-js/es6/map'\n// import 'core-js/es6/weak-map'\n// import 'core-js/es6/set'\n// import 'core-js/es7/object'\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect'\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\n// import 'core-js/es7/reflect'\n\n// CustomEvent() constructor functionality in IE9, IE10, IE11\n(function () {\n\n  if ( typeof window.CustomEvent === \"function\" ) return false\n\n  function CustomEvent ( event, params ) {\n    params = params || { bubbles: false, cancelable: false, detail: undefined }\n    var evt = document.createEvent( 'CustomEvent' )\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail )\n    return evt\n  }\n\n  CustomEvent.prototype = window.Event.prototype\n\n  window.CustomEvent = CustomEvent\n})()\n","import React, { Component } from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport history from './history'\n// import { renderRoutes } from 'react-router-config';\nimport './App.scss';\n\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\">\n  <div class=\"ui active loader\"></div>\n</div>;\n\n// Containers\nconst DefaultLayout = React.lazy(() => import('./containers/DefaultLayout'));\n\n// Pages\nconst Login = React.lazy(() => import('./views/Pages/Login'));\nconst Register = React.lazy(() => import('./views/Pages/Register'));\nconst Page404 = React.lazy(() => import('./views/Pages/Page404'));\nconst Page500 = React.lazy(() => import('./views/Pages/Page500'));\n\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <Router history={history}>\n          <React.Suspense fallback={loading()}>\n            <Switch>\n              <Route exact path=\"/login\" name=\"Login Page\" render={props => <Login {...props}/>} />\n              <Route exact path=\"/register\" name=\"Register Page\" render={props => <Register {...props}/>} />\n              <Route exact path=\"/404\" name=\"Page 404\" render={props => <Page404 {...props}/>} />\n              <Route exact path=\"/500\" name=\"Page 500\" render={props => <Page500 {...props}/>} />\n              <Route path=\"/\" name=\"Home\" render={props => <DefaultLayout {...props}/>} />\n            </Switch>\n          </React.Suspense>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers} from 'redux';\r\nimport pengelolaReducer from './pengelolaReducer';\r\nimport { reducer as formReducer} from 'redux-form';\r\nimport userPenggunaReducer from './userPenggunaReducer';\r\n\r\nexport default combineReducers({   \r\n    pengelola: pengelolaReducer,\r\n    form: formReducer,\r\n    userpengguna: userPenggunaReducer\r\n})"," import _ from 'lodash';\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_KLUSERPENGELOLAS':\r\n            return { ...state, ..._.mapKeys(action.payload, 'idklpuserpengelola')};\r\n        case 'CREATE_KLUSERPENGELOLA':\r\n            if(!action.payload){\r\n                return null;\r\n            }\r\n            return {...state, [action.payload.id]: action.payload};\r\n        case 'DELETE_KLUSERPENGELOLA':\r\n            if(!action.payload){\r\n                return null;\r\n            }\r\n            return _.omit(state, action.payload);\r\n        case 'FETCH_KLUSERPENGELOLA':\r\n            if(!action.payload){\r\n                return null;\r\n            }\r\n                return { ...state, [action.payload.id]: action.payload};\r\n        case 'EDIT_KLUSERPENGELOLA':\r\n            if(!action.payload){\r\n                    return null;\r\n                }\r\n                return { ...state, [action.payload.id]: action.payload};  \r\n        default:\r\n            return state;\r\n        }\r\n};","import _ from 'lodash';\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_USERPENGGUNAS':\r\n            return { ...state, ..._.mapKeys(action.payload, 'idklpuserpengelola')};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import 'react-app-polyfill/ie9'; // For IE 9-11 support\nimport 'react-app-polyfill/stable';\n// import 'react-app-polyfill/ie11'; // For IE 11 support\nimport './polyfill'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose} from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport reducers from './reducers';\n\nconst composeEnhancers= window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    reducers,\n    composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}