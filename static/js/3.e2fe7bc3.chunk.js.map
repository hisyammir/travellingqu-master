{"version":3,"sources":["../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js","../node_modules/lodash/identity.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_baseFor.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/chart.js/dist/Chart.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_createBaseEach.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","inverse","a","bool","color","string","body","outline","className","cssModule","object","innerRef","oneOfType","func","Card","props","Tag","attributes","Object","classes","createElement","ref","defaultProps","__webpack_exports__","CardBody","isArray","isSymbol","reIsDeepProp","reIsPlainProp","module","exports","value","type","test","defineProperty","key","configurable","enumerable","writable","isObject","srcValue","undefined","castPath","toKey","path","index","length","isKey","stringToPath","toString","getNative","e","baseFor","createBaseFor","process","d","Doughnut","Pie","Line","Bar","Radar","Polar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","target","i","arguments","source","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","this","_len","args","Array","_key","apply","concat","handleOnClick","event","chartInstance","_this$props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","element","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","data","memoizeDataProps","datasets","map","set","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","forEach","dataset","label","console","error","getCurrentDatasets","config","_this2","_this3","helpers","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","values","destroy","render","_props3","id","onClick","Component","isRequired","number","arrayOf","propName","componentName","controllers","Error","display","position","_React$Component2","_this5","_ref","_React$Component3","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","_this15","_ref6","_React$Component8","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","defaults","iteratee","fromRight","keysFunc","iterable","baseMatches","baseMatchesProperty","identity","property","baseIsMatch","getMatchData","matchesStrictComparable","matchData","Stack","baseIsEqual","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","customizer","noCustomizer","objValue","stack","result","isStrictComparable","get","hasIn","baseGet","defaultValue","baseHasIn","hasPath","isArguments","isIndex","isLength","hasFunc","baseProperty","basePropertyDeep","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","c","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","arg","slice","pair","exec","from","to","round","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toUpperCase","name","Color","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","prop","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","noop","uid","isNullOrUndef","substr","isFinite","_isFinite","_x","Number","valueOrDefault","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","array","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","clear","chart","ctx","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","generateLabels","ds","arcOpts","bw","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","_abstract","DateAdapter","Controller","types","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","deprecations","deprecateSimple","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","other","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","baseIteratee","initializer","accumulator","baseEach","baseForOwn","createBaseEach","isArrayLike","eachFunc"],"mappings":"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","file":"static/js/3.e2fe7bc3.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function _abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: _abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: _abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: _abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: _abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: _abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: _abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: _abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;"],"sourceRoot":""}